{"version":3,"sources":["images/no-image.jpg","components/Header/Header.js","config.js","components/HeroImage/HeroImage.js","components/SearchBar/SearchBar.js","components/FourColGrid/FourColGrid.js","components/MovieThumb/MovieThumb.js","components/LoadMoreBtn/LoadMoreBtn.js","components/Spinner/Spinner.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Navigation/Navigation.js","components/MovieInfo/MovieInfo.js","helpers.js","components/MovieInfoBar/MovieInfoBar.js","components/Actor/Actor.js","components/Movie/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","className","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","icon","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","id","MovieThumb","clickable","to","pathname","movieId","movieName","src","alt","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","backdrop_path","overview","poster_path","Logo3","NotFound","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","runtime","App","basename","Fragment","path","component","exact","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6a0f8bd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.5eb0b883.jpg\";","import './Header.css';\n\nfunction Header()\n{\n\treturn (\n    \"\"\n  );\n}\n\nexport default Header;\n","//Configuration pour TMDB\n// Nouvelle config de l'api = https://api.themoviedb.org/3/configuration?api_key=0fa964c211ec97fbdb3483b5075d2825\n\n//Exemple de recherche :https://api.themoviedb.org/3/movie/550?api_key=0fa964c211ec97fbdb3483b5075d2825\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0fa964c211ec97fbdb3483b5075d2825';\n\n//Images\n//Exemple d'URL pour une image : 'https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg'\n\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\n\n//Taille des images : \"w300\",\"w780\",\"w1280\",\"original\"\n\nconst BACKDROP_SIZE = 'w1280';\n\n//\"w92\",\"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\n\nconst POSTER_SIZE = 'w500';\n\n\nexport\n{\n\tAPI_URL,\n\tAPI_KEY,\n\tIMAGE_BASE_URL,\n\tBACKDROP_SIZE,\n\tPOSTER_SIZE\n}","import React from 'react';\nimport './HeroImage.css';\n\nconst HeroImage = (props) => \n{\n  return (\n    <div className=\"rmdb-heroimage\"\n    style={{\n      background: \n    `linear-gradient(to bottom, rgba(0,0,0,0)\n    39%,rgba(0,0,0,0)\n    41%,rgba(0,0,0,0.65)\n    100%),\n    url('${props.image}'), #1C1C1C`\n  }}\n  >\n      <div className=\"rmdb-heroimage-content\">\n        <div className=\"rmdb-heroimage-text\">\n          <h1>{props.title}</h1>\n          <p>{props.text}</p>\n        </div>\n      </div>\n    </div> \n  )\n}\n\nexport default HeroImage;\n","import React, { Component } from 'react';\nimport './SearchBar.css';\nimport FontAwesome from 'react-fontawesome';\n\nclass SearchBar extends Component\n{\n  state = {\n    value: ''\n  }\n\n  timeout = null;\n\n  doSearch = (event) => {\n    this.setState({ value: event.target.value })\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout( () => {\n      this.props.callback(this.state.value);\n    }, 500);\n\n  }\n\n  render(){\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" icon=\"search\" size=\"2x\" />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search\"\n            onChange={this.doSearch}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./FourColGrid.css\";\nimport PropTypes from \"prop-types\";\n\nconst FourColGrid = (props) => {\n  const renderElements = () => {\n    const gridElements = props.children.map((element, i) => {\n      return (\n        <div key={i} className=\"rmdb-grid-element\" id=\"actor\">\n          {element}\n          {/*<span className=\"tooltiptext\">{props.text}kkk</span>*/}\n        </div>\n      );\n    });\n    return gridElements;\n  };\n  return (\n    <div className=\"rmdb-grid\">\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\n    </div>\n  );\n};\n//test proptypes pour éviter les erreurs de types dans le choix des props\nFourColGrid.propTypes = {\n  header: PropTypes.string,\n  loading: PropTypes.bool\n};\n\nexport default FourColGrid;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./MovieThumb.css\";\n\nconst MovieThumb = (props) => {\n  return (\n    <div className=\"rmdb-moviethumb\">\n      {props.clickable ? (\n        <Link\n          to={{\n            pathname: `/${props.movieId}`,\n            movieName: `${props.movieName}`\n          }}\n        >\n          <img src={props.image} alt=\"moviethumb\" id=\"movie-search\"/>\n        </Link>\n      ) : (\n        <img src={props.image} alt=\"moviethumb\" />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string\n};\n\nexport default MovieThumb;\n","import React from 'react';\nimport './LoadMoreBtn.css';\n\nconst LoadMoreBtn = props => {\n\treturn (\n\t\t<div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n\t\t\t<p>{props.text}</p>\n\t\t</div>\n\t);\n};\n\nexport default LoadMoreBtn;\n","import React from 'react';\nimport './Spinner.css';\n\n\nfunction Spinner()\n{\n\treturn (\n\t\t<div className=\"loader\">\n\n\t\t</div>\n\t)\n}\n\nexport default Spinner;\n","/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\nimport HeroImage from '../HeroImage/HeroImage';\nimport SearchBar from '../SearchBar/SearchBar';\nimport FourColGrid from '../FourColGrid/FourColGrid';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport LoadMoreBtn from '../LoadMoreBtn/LoadMoreBtn';\nimport Spinner from '../Spinner/Spinner';\nimport './Home.css';\nimport Logo3 from \"../../images/no-image.jpg\";\n\n\nclass Home extends Component {\n  state = {\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\"\n  };\n//pour changer langue résumé et affiche --> mettre fr-FR après language\n  componentDidMount() {\n    this.setState({ loading: true });\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    this.fetchItems(endpoint);\n  }\n//barre de recherche\n  searchItems = searchTerm => {\n    console.log(searchTerm);\n    let endpoint = \"\";\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  //config bouton load more pour charger les autres films\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({\n      loading: true\n    });\n\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\n        .state.currentPage + 1}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\n        this.state.searchTerm\n      }$page=${this.state.currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages\n        }, () => {\n          localStorage.setItem('HomeState', JSON.stringify(this.state));\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-home\">\n        {this.state.heroImage ? (\n          <div>\n            <HeroImage\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\n                this.state.heroImage.backdrop_path\n              }`}\n              title={this.state.heroImage.title}\n              text={this.state.heroImage.overview}\n            />\n            <SearchBar callback={this.searchItems} />\n          </div>\n        ) : null}\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\n            loading={this.state.loading}\n          >\n            {this.state.movies.map((element, i) => {\n              return (\n                <MovieThumb\n                  key={i}\n                  clickable={true}\n                  image={\n                    element.poster_path\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\n                      : `${Logo3}`\n                  }\n                  movieId={element.id}\n                  movieName={element.title}\n                />\n              );\n            })}\n          </FourColGrid>\n          {this.state.loading ? <Spinner /> : null}\n          {this.state.currentPage <= this.state.totalPages &&\n          !this.state.loading ? (\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;","import React from 'react'\n\nfunction NotFound() {\n\treturn (\n\t\t<div>\n\t\t\t<h1>Whoooops. This page doesn't exist.</h1>\n\t\t</div>\n\t)\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Navigation.css';\n\nfunction Navigation(props)\n{\n\treturn (\n    <div className=\"rmdb-navigation\">\n      <div className=\"rmdb-navigation-content\">\n        <Link to=\"/\">\n          <p>Home</p>\n        </Link>\n        <p>/</p>\n        <p>{props.movie}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\nimport FontAwesome from 'react-fontawesome';\nimport MovieThumb from '../MovieThumb/MovieThumb';\nimport './Movieinfo.css';\nimport Logo3 from \"../../images/no-image.jpg\";\n\nfunction MovieInfo(props)\n{\n\treturn (\n    <div\n      className=\"rmdb-movieinfo\"\n      style={{\n        background: props.movie.backdrop_path\n          ? `linear-gradient(rgba(0, 0, 0, 0) 39%, rgba(0, 0, 0, 0) 41%, rgba(0, 0, 0, 0.65) 100%), url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\n          : \"#000\"\n      }}\n    >\n      <div className=\"rmdb-movieinfo-content\">\n        <div className=\"rmdb-movieinfo-thumb\">\n          <MovieThumb\n            image={\n              props.movie.poster_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\n                : `${Logo3}`\n            }\n            clickable={false}\n          />\n        </div>\n        <div className=\"rmdb-movieinfo-text\">\n          <h1>{props.movie.title}</h1>\n          <h3>PLOT</h3>\n          <p>{props.movie.overview}</p>\n          <h3>IMDB RATING</h3>\n          <div className=\"rmdb-rating\">\n            <meter\n              min=\"0\"\n              max=\"100\"\n              optimum=\"100\"\n              low=\"40\"\n              high=\"70\"\n              value={props.movie.vote_average * 10}\n            ></meter>\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\n          </div>\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\n          {props.directors.map((element, i) => {\n            return (\n              <p key={i} className=\"rmdb-director\">\n                {element.name}\n              </p>\n            );\n          })}\n        </div>\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\n      </div>\n    </div>\n  );\n}\n\nexport default MovieInfo;\n","//Convert time to hours and minutes\nexport const calcTime = (time) =>\n{\n\tconst hours = Math.floor(time / 60);\n\tconst mins = time % 60;\n\treturn `${hours}h ${mins}m`;\n}\n\n//Convert a number to $ format\nexport const convertMoney = (money) =>\n{\n\tconst formatter = new Intl.NumberFormat('en-US', {\n\t\tstyle: 'currency',\n\t\tcurrency: 'USD',\n\t\tminimumFractionDigits: 0,\n\t});\n\treturn formatter.format(money);\n}","import React from \"react\";\nimport FontAwesome from \"react-fontawesome\";\nimport { calcTime, convertMoney } from \"../../helpers\";\nimport \"./MovieInfoBar.css\";\n\nconst MovieInfoBar = (props) => {\n  return (\n    <div className=\"rmdb-movieinfobar\">\n      <div className=\"rmdb-movieinfobar-content\">\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Running Time: {calcTime(props.time)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Budget: {convertMoney(props.budget)}\n          </span>\n        </div>\n        <div className=\"rmdb-movieinfobar-content-col\">\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n          <span className=\"rmdb-movieinfobar-info\">\n            Revenue: {convertMoney(props.revenue)}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfoBar;\n","import React from \"react\";\nimport { IMAGE_BASE_URL } from \"../../config\";\nimport \"./Actor\";\nimport Logo3 from \"../../images/no-image.jpg\";\n\nfunction Actor(props) {\n  const POSTER_SIZE = \"w154\";\n\n  return (\n    <div className=\"rmdb-actor\">\n      <img\n        src={\n          props.actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\n            : `${Logo3}`\n        }\n        alt=\"actorthumb\"\n      />\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\n    </div>\n  );\n}\n\nexport default Actor;\n","import React, { Component } from \"react\";\nimport { API_KEY, API_URL } from \"../../config\";\nimport Navigation from \"../Navigation/Navigation\";\nimport MovieInfo from \"../MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../MovieInfoBar/MovieInfoBar\";\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\nimport Actor from \"../Actor/Actor\";\nimport Spinner from \"../Spinner/Spinner\";\nimport \"./Movie\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    //First fetch the movie\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = (endpoint) => {\n    fetch(endpoint)\n      .then((result) => result.json())\n      .then((result) => {\n        console.log(result);\n        if (result.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: result }, () => {\n            // ...then fetch actors in the setState callback function\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then((result) => result.json())\n              .then((result) => {\n                const directors = result.crew.filter(\n                  (member) => member.job === \"Director\"\n                );\n\n                this.setState({\n                  actors: result.cast,\n                  directors,\n                  loading: false\n                });\n              });\n          });\n        }\n      });\n    //.catch (error => console.error('Error:', error))\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-movie\">\n        {this.state.movie ? (\n          <div>\n            <Navigation movie={this.props.location.movieName} />\n            <MovieInfo\n              movie={this.state.movie}\n              directors={this.state.directors}\n            />\n            <MovieInfoBar\n              time={this.state.movie.runtime}\n              budget={this.state.movie.budget}\n              revenue={this.state.movie.revenue}\n            />\n          </div>\n        ) : null}\n        {this.state.actors ? (\n          <div className=\"rmdb-movie-grid\">\n            <FourColGrid header={\"Actors\"}>\n              {this.state.actors.map((element, i) => {\n                return <Actor key={i} actor={element} />;\n              })}\n            </FourColGrid>\n          </div>\n        ) : null}\n        {!this.state.actors && !this.state.loading ? (\n          <h1>No Movie Found!</h1>\n        ) : null}\n        {this.state.loading ? <Spinner /> : null}}\n      </div>\n    );\n  }\n}\n\nexport default Movie;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport NotFound from './components/NotFound/NotFound';\nimport Movie from './components/Movie/Movie';\n\nfunction App()\n{\n  return (\n    <BrowserRouter basename='/movie-app/'>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:movieId\" component={Movie} exact />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n\t)\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}