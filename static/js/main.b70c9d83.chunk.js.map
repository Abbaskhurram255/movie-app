{"version":3,"sources":["images/no-image.jpg","components/Header/Header.js","config.js","components/HeroImage/HeroImage.js","components/SearchBar/SearchBar.js","components/FourColGrid/FourColGrid.js","components/MovieThumb/MovieThumb.js","components/LoadMoreBtn/LoadMoreBtn.js","components/Spinner/Spinner.js","components/Home/Home.js","components/NotFound/NotFound.js","components/Navigation/Navigation.js","components/MovieInfo/MovieInfo.js","helpers.js","components/MovieInfoBar/MovieInfoBar.js","components/Actor/Actor.js","components/Movie/Movie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","className","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","callback","name","icon","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","id","MovieThumb","clickable","to","pathname","movieId","movieName","src","alt","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","localStorage","setItem","JSON","stringify","backdrop_path","overview","poster_path","Logo3","NotFound","Navigation","movie","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","runtime","App","basename","Fragment","path","component","exact","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b70c9d83.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/no-image.5eb0b883.jpg\";","import './Header.css';\r\n\r\nfunction Header()\r\n{\r\n\treturn (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","//Configuration pour TMDB\r\n// Nouvelle config de l'api = https://api.themoviedb.org/3/configuration?api_key=0fa964c211ec97fbdb3483b5075d2825\r\n\r\n//Exemple de recherche :https://api.themoviedb.org/3/movie/550?api_key=0fa964c211ec97fbdb3483b5075d2825\r\n\r\nconst API_URL = 'https://api.themoviedb.org/3/';\r\nconst API_KEY = '0fa964c211ec97fbdb3483b5075d2825';\r\n\r\n//Images\r\n//Exemple d'URL pour une image : 'https://image.tmdb.org/t/p/w500/kqjL17yufvn9OVLyXYpvtyrFfak.jpg'\r\n\r\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/';\r\n\r\n//Taille des images : \"w300\",\"w780\",\"w1280\",\"original\"\r\n\r\nconst BACKDROP_SIZE = 'w1280';\r\n\r\n//\"w92\",\"w154\",\"w185\",\"w342\",\"w500\",\"w780\",\"original\"\r\n\r\nconst POSTER_SIZE = 'w500';\r\n\r\n\r\nexport\r\n{\r\n\tAPI_URL,\r\n\tAPI_KEY,\r\n\tIMAGE_BASE_URL,\r\n\tBACKDROP_SIZE,\r\n\tPOSTER_SIZE\r\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\nconst HeroImage = (props) => \r\n{\r\n  return (\r\n    <div className=\"rmdb-heroimage\"\r\n    style={{\r\n      background: \r\n    `linear-gradient(to bottom, rgba(0,0,0,0)\r\n    39%,rgba(0,0,0,0)\r\n    41%,rgba(0,0,0,0.65)\r\n    100%),\r\n    url('${props.image}'), #1C1C1C`\r\n  }}\r\n  >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h1>{props.title}</h1>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default HeroImage;\r\n","import React, { Component } from 'react';\r\nimport './SearchBar.css';\r\nimport FontAwesome from 'react-fontawesome';\r\n\r\nclass SearchBar extends Component\r\n{\r\n  state = {\r\n    value: ''\r\n  }\r\n\r\n  timeout = null;\r\n\r\n  doSearch = (event) => {\r\n    this.setState({ value: event.target.value })\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout( () => {\r\n      this.props.callback(this.state.value);\r\n    }, 500);\r\n\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" icon=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./FourColGrid.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FourColGrid = (props) => {\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\" id=\"actor\">\r\n          {element}\r\n          {/*<span className=\"tooltiptext\">{props.text}kkk</span>*/}\r\n        </div>\r\n      );\r\n    });\r\n    return gridElements;\r\n  };\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\r\n    </div>\r\n  );\r\n};\r\n//test proptypes pour éviter les erreurs de types dans le choix des props\r\nFourColGrid.propTypes = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = (props) => {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`\r\n          }}\r\n        >\r\n          <img src={props.image} alt=\"moviethumb\" id=\"movie-search\"/>\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt=\"moviethumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = props => {\r\n\treturn (\r\n\t\t<div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n\t\t\t<p>{props.text}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n\r\nfunction Spinner()\r\n{\r\n\treturn (\r\n\t\t<div className=\"loader\">\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Spinner;\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE } from '../../config';\r\nimport HeroImage from '../HeroImage/HeroImage';\r\nimport SearchBar from '../SearchBar/SearchBar';\r\nimport FourColGrid from '../FourColGrid/FourColGrid';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport './Home.css';\r\nimport Logo3 from \"../../images/no-image.jpg\";\r\n\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\"\r\n  };\r\n//pour changer langue résumé et affiche --> mettre fr-FR après language\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n//barre de recherche\r\n  searchItems = searchTerm => {\r\n    console.log(searchTerm);\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    });\r\n\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  //config bouton load more pour charger les autres films\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      loading: true\r\n    });\r\n\r\n    if (this.state.searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this\r\n        .state.currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }$page=${this.state.currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = endpoint => {\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        this.setState({\r\n          movies: [...this.state.movies, ...result.results],\r\n          heroImage: this.state.heroImage || result.results[0],\r\n          loading: false,\r\n          currentPage: result.page,\r\n          totalPages: result.total_pages\r\n        }, () => {\r\n          localStorage.setItem('HomeState', JSON.stringify(this.state));\r\n        });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        {this.state.heroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${\r\n                this.state.heroImage.backdrop_path\r\n              }`}\r\n              title={this.state.heroImage.title}\r\n              text={this.state.heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid\r\n            header={this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((element, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    element.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`\r\n                      : `${Logo3}`\r\n                  }\r\n                  movieId={element.id}\r\n                  movieName={element.title}\r\n                />\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n          {this.state.loading ? <Spinner /> : null}\r\n          {this.state.currentPage <= this.state.totalPages &&\r\n          !this.state.loading ? (\r\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nfunction NotFound() {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Whoooops. This page doesn't exist.</h1>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nfunction Navigation(props)\r\n{\r\n\treturn (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './Movieinfo.css';\r\nimport Logo3 from \"../../images/no-image.jpg\";\r\n\r\nfunction MovieInfo(props)\r\n{\r\n\treturn (\r\n    <div\r\n      className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `linear-gradient(rgba(0, 0, 0, 0) 39%, rgba(0, 0, 0, 0) 41%, rgba(0, 0, 0, 0.65) 100%), url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.backdrop_path}')`\r\n          : \"#000\"\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : `${Logo3}`\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB RATING</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter\r\n              min=\"0\"\r\n              max=\"100\"\r\n              optimum=\"100\"\r\n              low=\"40\"\r\n              high=\"70\"\r\n              value={props.movie.vote_average * 10}\r\n            ></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map((element, i) => {\r\n            return (\r\n              <p key={i} className=\"rmdb-director\">\r\n                {element.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","//Convert time to hours and minutes\r\nexport const calcTime = (time) =>\r\n{\r\n\tconst hours = Math.floor(time / 60);\r\n\tconst mins = time % 60;\r\n\treturn `${hours}h ${mins}m`;\r\n}\r\n\r\n//Convert a number to $ format\r\nexport const convertMoney = (money) =>\r\n{\r\n\tconst formatter = new Intl.NumberFormat('en-US', {\r\n\t\tstyle: 'currency',\r\n\t\tcurrency: 'USD',\r\n\t\tminimumFractionDigits: 0,\r\n\t});\r\n\treturn formatter.format(money);\r\n}","import React from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { calcTime, convertMoney } from \"../../helpers\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = (props) => {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Running Time: {calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Budget: {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Revenue: {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../config\";\r\nimport \"./Actor\";\r\nimport Logo3 from \"../../images/no-image.jpg\";\r\n\r\nfunction Actor(props) {\r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : `${Logo3}`\r\n        }\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Actor;\r\n","import React, { Component } from \"react\";\r\nimport { API_KEY, API_URL } from \"../../config\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\nimport MovieInfo from \"../MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../FourColGrid/FourColGrid\";\r\nimport Actor from \"../Actor/Actor\";\r\nimport Spinner from \"../Spinner/Spinner\";\r\nimport \"./Movie\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loading: true });\r\n    //First fetch the movie\r\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        if (result.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            // ...then fetch actors in the setState callback function\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then((result) => result.json())\r\n              .then((result) => {\r\n                const directors = result.crew.filter(\r\n                  (member) => member.job === \"Director\"\r\n                );\r\n\r\n                this.setState({\r\n                  actors: result.cast,\r\n                  directors,\r\n                  loading: false\r\n                });\r\n              });\r\n          });\r\n        }\r\n      });\r\n    //.catch (error => console.error('Error:', error))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo\r\n              movie={this.state.movie}\r\n              directors={this.state.directors}\r\n            />\r\n            <MovieInfoBar\r\n              time={this.state.movie.runtime}\r\n              budget={this.state.movie.budget}\r\n              revenue={this.state.movie.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.actors ? (\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={\"Actors\"}>\r\n              {this.state.actors.map((element, i) => {\r\n                return <Actor key={i} actor={element} />;\r\n              })}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!this.state.actors && !this.state.loading ? (\r\n          <h1>No Movie Found!</h1>\r\n        ) : null}\r\n        {this.state.loading ? <Spinner /> : null}}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Header from './components/Header/Header';\r\nimport Home from './components/Home/Home';\r\nimport NotFound from './components/NotFound/NotFound';\r\nimport Movie from './components/Movie/Movie';\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <BrowserRouter basename='/yoMovies/'>\r\n      <React.Fragment>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/:movieId\" component={Movie} exact />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </React.Fragment>\r\n    </BrowserRouter>\r\n\t)\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />,document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}